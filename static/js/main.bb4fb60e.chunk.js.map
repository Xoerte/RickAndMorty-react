{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","words","authors","colors","randomNumber","Math","floor","random","length","_useState","useState","_useState2","Object","slicedToArray","word","setWord","_useState3","_useState4","author","setAuthor","_useState5","_useState6","color","setColor","react_default","a","createElement","id","class","style","backgroundColor","href","onClick","console","log","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"6LAoDeA,cA1CH,SAACC,GAEX,IAAIC,EAAQ,CAAC,mEAAmE,+BAC5EC,EAAU,CAAC,mBAAmB,kBAC9BC,EAAS,CAAC,UAAU,UAAU,WAC9BC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWN,EAAMO,QAL/BC,EAMEC,mBAAST,EAAMG,IANjBO,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAMdK,EANcH,EAAA,GAMTI,EANSJ,EAAA,GAAAK,EAOMN,mBAASR,EAAQE,IAPvBa,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAOdE,EAPcD,EAAA,GAOPE,EAPOF,EAAA,GAAAG,EAQIV,mBAASP,EAAOC,IARpBiB,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAQdE,EARcD,EAAA,GAQRE,EARQF,EAAA,GAkBrB,OACEG,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YAAYC,MAAM,YAAYC,MAAQ,CAACC,gBAAgBR,IAC7DE,EAAAC,EAAAC,cAAA,OAAKE,MAAM,gBACTJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,aACXJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,uBACXJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,QACVJ,EAAAC,EAAAC,cAAA,MAAIC,GAAG,OAAOC,MAAM,OAAOd,GAC3BU,EAAAC,EAAAC,cAAA,KAAGC,GAAG,UAAUT,IAEjBM,EAAAC,EAAAC,cAAA,OAAKE,MAAM,qBACVJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,SACVJ,EAAAC,EAAAC,cAAA,KAAGK,KAAK,2BAA2BJ,GAAG,eAAcH,EAAAC,EAAAC,cAAA,KAAGE,MAAM,gCAC7DJ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAGE,MAAM,gCAEZJ,EAAAC,EAAAC,cAAA,UAAQC,GAAG,YAAYK,QAtBZ,WACjB,IAAI5B,EAAeC,KAAKC,MAAMD,KAAKE,SAAWN,EAAMO,QACpDO,EAAQd,EAAMG,IACde,EAAUjB,EAAQE,IAClBmB,EAASpB,EAAOC,IAChB6B,QAAQC,IAAI9B,KAiBN,eAGFoB,EAAAC,EAAAC,cAAA,OAAKE,MAAM,iBCjCJO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5B,EAAAC,EAAAC,cAACF,EAAAC,EAAM4B,WAAP,KACE7B,EAAAC,EAAAC,cAAC4B,EAAD,QAOJnB","file":"static/js/main.bb4fb60e.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react'\nimport {useState} from \"react\"\nimport ReactDOM from 'react-dom'\n\n\n\nconst Text = () => <h1>{\"HOLA\"}</h1>\n\n\nconst App = (props) => {\n  \n  var words = [\"Definiteness of purpose is the starting point of all achievement\",\"You become what you believe\"]\n  var authors = [\"-W.Clement Stone\",\"-Oprah Winfrey\"]\n  var colors = [\"#7DCEA0\",\"#EC7063\",\"#A2D9CE\"]\n  var randomNumber = Math.floor(Math.random() * words.length)\n  const [word,setWord] = useState(words[randomNumber])\n  const [author,setAuthor] = useState(authors[randomNumber])\n  const [color,setColor] = useState(colors[randomNumber])\n  var colores = color\n  const randomWord = () => {\n    var randomNumber = Math.floor(Math.random() * words.length)\n    setWord(words[randomNumber])\n    setAuthor(authors[randomNumber])\n    setColor(colors[randomNumber])\n    console.log(randomNumber)\n  } \n  \n  return (\n    <div id=\"quote-box\" class=\"container\" style={({backgroundColor:color})}>\n      <div class=\"row mt-5 p-5\">\n        <div class=\"col-lg-3\"></div>\n        <div class=\"col-lg-6 bg-primary\">   \n        <div class=\"info\"> \n         <h1 id=\"text\" class=\"p-4\">{word}</h1>\n         <p id=\"author\">{author}</p>\n        </div>\n        <div class=\"contenedor_button\">\n         <div class=\"redes\">\n          <a href=\"twitter.com/intent/tweet\" id=\"tweet-quote\"><i class=\"fa-brands fa-twitter fa-1x\"></i></a>\n          <a><i class=\"fa-brands fa-tumblr fa-1x\"></i></a>\n          </div>\n          <button id=\"new-quote\" onClick={randomWord}>New quote</button>\n        </div>\n        </div>\n        <div class=\"col-lg-3\"></div>\n      </div>\n    </div>\n    )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}